server {
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;

    ssl_certificate /var/certs/server.crt;
    ssl_certificate_key /var/certs/server.key;

    location / {
        proxy_set_header Host $host;
        proxy_set_header REMOTE_ADDR $remote_addr;
        proxy_set_header X-Real-Ip $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://server:8000;
    }

    location /static/ {
        alias /usr/src/app/.static/;
    }

    # This in theory should match this url /ws/{uuid} and place the uuid in $1
    # and redirect to the docker image called sandbox-{uuid}
    location ~ ^/ws/([-a-zA-Z0-9]+)/$ {
        proxy_http_version 1.1;
        proxy_pass_request_headers on;

        proxy_read_timeout 300;
        proxy_connect_timeout 2;

        proxy_set_header Host $host;
        proxy_set_header REMOTE_ADDR $remote_addr;
        proxy_set_header X-Real-Ip $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        # Resolver is Docker DNS Service
        resolver 127.0.0.11;
        proxy_pass http://sandbox-$1:8000;
    }
}
